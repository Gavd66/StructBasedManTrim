//
//  IndexUnit.swift
//  StructBasedManualTrim
//
//  Created by Gavin Dorward on 7/6/21.
//

import Foundation
import SwiftUI

struct CargoIndexUnit {

    func forCompartment1(using weight: Int) -> Double {

        switch weight {
        case 1...299:
            return -0.5
        case 300...599:
            return -1.4
        case 600...899:
            return -2.3
        case 900...1199:
            return -3.2
        case 1200...1499:
            return -4.1
        case 1500...1799:
            return -5.0
        case 1800...2099:
            return -5.9
        case 2100...2399:
            return -6.8
        case 2400...2699:
            return -7.7
        case 2700...2999:
            return -8.6
        case 3000...3299:
            return -9.5
        case 3300...3599:
            return -10.4
        case 3600...3899:
            return -11.3
        case 3900...4199:
            return -12.2
        case 4200...4499:
            return -13.1
        case 4500...4799:
            return -14.0
        case 4800...5099:
            return -14.9
        case 5100...5399:
            return -15.8
        case 5400...5699:
            return -16.7
        case 5700...5999:
            return  -17.6
        case 6000...6299:
            return -18.5
        case 6300...6599:
            return -19.4
        case 6600...6899:
            return -20.3
        case 6900...7199:
            return -21.2
        case 7200...7499:
            return -22.1
        case 7500...7799:
            return -23.0
        case 7800...8099:
            return -23.9
        case 8100...8399:
            return -24.8
        case 8400...8699:
            return -25.7
        case 8700...8999:
            return -26.6
        case 9000...9299:
            return -27.5
        case 9300...9599:
            return -28.4
        case 9600...9899:
            return -29.4
        case 9900...10199:
            return -30.3
        case 10200...10499:
            return -31.2
        case 10500...10799:
            return -32.1
        case 10800...11099:
            return -33.0
        case 11100...11399:
            return -33.9
        case 11400...11699:
            return -34.8
        case 11700...11999:
            return -35.7
        case 12000...12299:
            return -36.6
        case 12300...12599:
            return -37.5
        case 12600...12899:
            return -38.4
        case 12900...13199:
            return -39.3
        case 13200...13499:
            return -40.2
        case 13500...13799:
            return -41.1
        case 13800...14099:
            return -42.0
        case 14100...14399:
            return -42.9
        case 14400...14699:
            return -43.8
        case 14700...14999:
            return -44.7
        case 15000...15306:
            return -45.6
        default:
            return 0
        }
    }

    func forCompartment2(using weight: Int) -> Double {

        switch weight {
        case 1...299:
            return -0.3
        case 300...599:
            return -0.8
        case 600...899:
            return -1.3
        case 900...1199:
            return -1.9
        case 1200...1499:
            return -2.4
        case 1500...1799:
            return -2.9
        case 1800...2099:
            return -3.5
        case 2100...2399:
            return -4.0
        case 2400...2699:
            return -4.5
        case 2700...2999:
            return -5.1
        case 3000...3299:
            return -5.6
        case 3300...3599:
            return -6.2
        case 3600...3899:
            return -6.7
        case 3900...4199:
            return -7.2
        case 4200...4499:
            return -7.8
        case 4500...4799:
            return -8.3
        case 4800...5099:
            return -8.8
        case 5100...5399:
            return -9.4
        case 5400...5699:
            return -9.9
        case 5700...5999:
            return  -10.4
        case 6000...6299:
            return -11.0
        case 6300...6599:
            return -11.5
        case 6600...6899:
            return -12.0
        case 6900...7199:
            return -12.6
        case 7200...7499:
            return -13.1
        case 7500...7799:
            return -13.7
        case 7800...8099:
            return -14.2
        case 8100...8399:
            return -14.7
        case 8400...8699:
            return -15.3
        case 8700...8999:
            return -15.8
        case 9000...9299:
            return -16.3
        case 9300...9599:
            return -16.9
        case 9600...9899:
            return -17.4
        case 9900...10199:
            return -17.9
        case 10200...10499:
            return -18.5
        case 10500...10799:
            return -19.0
        case 10800...11099:
            return -19.5
        case 11100...11399:
            return -20.1
        case 11400...11699:
            return -20.6
        case 11700...11999:
            return -21.1
        case 12000...12299:
            return -21.7
        case 12300...12599:
            return -22.2
        case 12600...12700:
            return -22.6
        default:
            return 0
        }
    }

    func forCompartment3(using weight: Int) -> Double {

        switch weight {
        case 1...299:
            return 0.2
        case 300...599:
            return 0.7
        case 600...899:
            return 1.2
        case 900...1199:
            return 1.6
        case 1200...1499:
            return 2.1
        case 1500...1799:
            return  2.6
        case 1800...2099:
            return  3.1
        case 2100...2399:
            return  3.5
        case 2400...2699:
            return  4.0
        case 2700...2999:
            return  4.5
        case 3000...3299:
            return  4.9
        case 3300...3599:
            return  5.4
        case 3600...3899:
            return  5.9
        case 3900...4199:
            return  6.3
        case 4200...4499:
            return  6.8
        case 4500...4799:
            return  7.3
        case 4800...5099:
            return  7.8
        case 5100...5399:
            return  8.2
        case 5400...5699:
            return  8.7
        case 5700...5999:
            return  9.2
        case 6000...6299:
            return  9.6
        case 6300...6599:
            return  10.1
        case 6600...6899:
            return  10.6
        case 6900...7199:
            return  11.0
        case 7200...7499:
            return  11.5
        case 7500...7799:
            return  12.0
        case 7800...8099:
            return  12.5
        case 8100...8399:
            return  12.9
        case 8400...8699:
            return  13.4
        case 8700...8999:
            return  13.9
        case 9000...9299:
            return  14.3
        case 9300...9599:
            return  14.8
        case 9600...9899:
            return  15.3
        case 9900...10199:
            return  15.7
        case 10200...10499:
            return  16.2
        case 10500...10771:
            return  16.7
        default:
            return 0.0
        }
    }

    func forCompartment4(using weight: Int) -> Double {
        switch weight {
        case 1...199:
            return 0.3
        case 200...399:
            return 0.8
        case 400...599:
            return 1.3
        case 600...799:
            return 1.8
        case 800...999:
            return 2.3
        case 1000...1199:
            return 2.8
        case 1200...1399:
            return 3.3
        case 1400...1599:
            return 3.8
        case 1600...1799:
            return 4.3
        case 1800...1999:
            return 4.8
        case 2000...2199:
            return 5.3
        case 2200...2399:
            return 5.8
        case 2400...2599:
            return 6.3
        case 2600...2799:
            return 6.8
        case 2800...2999:
            return 7.3
        case 3000...3199:
            return 7.8
        case 3200...3399:
            return 8.3
        case 3400...3599:
            return 8.8
        case 3600...3799:
            return 9.3
        case 3800...3999:
            return 9.8
        case 4000...4199:
            return 10.3
        case 4200...4399:
            return 10.8
        case 4400...4599:
            return 11.3
        case 4600...4799:
            return 11.8
        case 4800...4999:
            return 12.4
        case 5000...5199:
            return 12.9
        case 5200...5399:
            return 13.4
        case 5400...5599:
            return 13.9
        case 5600...5799:
            return 14.4
        case 5800...5999:
            return 14.9
        case 6000...6199:
            return 15.4
        case 6200...6399:
            return 15.9
        case 6400...6599:
            return 16.4
        case 6600...6799:
            return 16.9
        case 6800...6999:
            return 17.4
        case 7000...7199:
            return 17.9
        case 7200...7399:
            return 18.4
        case 7400...7599:
            return 18.9
        case 7600...7799:
            return 19.4
        case 7800...7999:
            return 19.9
        case 8000...8199:
            return 20.4
        case 8200...8399:
            return 20.9
        case 8400...8599:
            return 21.4
        case 8600...8799:
            return 21.9
        case 8800...8999:
            return 22.4
        case 9000...9199:
            return 22.9
        case 9200...9399:
            return 23.4
        case 9400...9525:
            return 23.9
        default:
            return 0.0
        }
    }

    func forCompartment5(using weight: Int) -> Double {
        switch weight {
        case 1...199:
            return 0.3
        case 200...399:
            return 1.0
        case 400...599:
            return 1.6
        case 600...799:
            return 2.2
        case 800...999:
            return 2.9
        case 1000...1199:
            return 3.5
        case 1200...1399:
            return 4.2
        case 1400...1599:
            return 4.8
        case 1600...1799:
            return 5.5
        case 1800...1999:
            return 6.1
        case 2000...2199:
            return 6.7
        case 2200...2399:
            return 7.4
        case 2400...2599:
            return 8.0
        case 2600...2735:
            return 8.6
        default:
            return 0
        }
    }
}
